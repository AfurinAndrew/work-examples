# Bind #
- name: Create a directory for bind
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: 0755
  with_items:
      - {path: /var/log/bind, owner: named, group: named}
      - {path: /var/cache/bind, owner: named, group: named}

- name: Remove and create a directory for bind zones
  ansible.builtin.file:
    path: /etc/bind/zones
    state: "{{ item }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - absent
    - directory

- name: Find in /etc/bind all default named.conf*
  ansible.builtin.find:
    paths: /etc/bind
    patterns: "named.conf*"
  register: conf_to_delete

- name: Remove default or old config in /etc/bind
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ conf_to_delete.files }}"

- name: Generate the template named.conf.* for bind
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /etc/bind/{{ item | basename | regex_replace('\.j2$', '') }}
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - templates/bind/*.j2
  notify: restarted_named_service
  tags: bind_conf, dns_conf

- name: Copy default db. in zones
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /etc/bind/zones/
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - files/bind/db.*

# dnsmasq #
- name: Create a directory for dnsmasq
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: 0755
  with_items:
      - {path: /var/log/dnsmasq, owner: dnsmasq, group: dnsmasq}
  tags: dnsmasq_conf

- name: Generate the template dnsmasq.conf for dnsmasq
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /etc/{{ item | basename | regex_replace('\.j2$', '') }}
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - templates/dnsmasq/dnsmasq.conf.j2
  notify: restarted_dnsmasq_service
  tags: dnsmasq_conf, dns_conf

- name: Generate the template addresses for dnsmasq
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /etc/dnsmasq.d/{{ item | basename | regex_replace('\.j2$', '') }}
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - templates/dnsmasq/addresses.j2
  notify: restarted_dnsmasq_service
  tags: dnsmasq_conf, dns_conf, dns_addr

# TEST #
# Bind exporter #
- name: Add repositories - Prometheus Bind exporter (testing)
  ansible.builtin.lineinfile:
    path: /etc/apk/repositories
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^@bind_exporter https://dl-cdn.alpinelinux.org/alpine/edge/testing", line: "@bind_exporter https://dl-cdn.alpinelinux.org/alpine/edge/testing" }
  tags: bind_exporter

- name: Install the Prometheus Bind exporter main packages .apk
  community.general.apk:
    name: 
      - prometheus-bind-exporter
    update_cache: true
    repository: https://dl-cdn.alpinelinux.org/alpine/edge/testing
  tags: bind_exporter

- name: Enabled bind-exporter
  ansible.builtin.service:
    name: bind-exporter
    enabled: true
  tags: bind_exporter

- name: Started bind-exporter
  ansible.builtin.service:
    name: bind-exporter
    state: started
  tags: bind_exporter

# nftables #
- name: Render template for config - /etc/nftables.nft
  ansible.builtin.template:
    src: nftables.nft.j2
    dest: /etc/nftables.nft
  notify: restarted_nftables_service
  tags: nft_conf